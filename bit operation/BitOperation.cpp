// n个十进制数转化为的二进制数中'1'的个数
#include <bits/stdc++.h>
using namespace std;
int f(int x)
{
    int res = 0;
    while (x)
    {
        if (x & 1)
            res++;
        x >>= 1;
    }
    return res;
}
int main()
{
    ios::sync_with_stdio(0), cin.tie(0), cout.tie(0);
    int n;
    cin >> n;
    for (int i = 1; i <= n; ++i)
    {
        int x;
        cin >> x;
        cout << f(x) << ' ';
    }
    return 0;
}
/*
1.十进制转二进制：
  （1）表格【八位二进制】 128 64 32 16 8 4 2 1
  （2）举例 11111111(2)=128+64+32+16+8+4+2+1=255(10)=2^8-1
            10101010(2)=128+32+8+2=170(10)
2.与或非、异或运算：
1&1=1，1&0=0，0%1=0，0&0=0
1|1=1，1|0=1，0|1=1，0|0=0
1^1=0，1^0=1，0^1=1，0^0=0
!1=0  !0=1  !2=0  !3=0
3.(a+b)=2*(a&b)+(a^b)
4.十进制数先转换为二进制数再进行布尔运算。
*/